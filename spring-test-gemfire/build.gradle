plugins {
  id 'java-library'
  id "io.freefair.lombok" version "6.6.1"
  id 'dependency-constraints'
  id 'gemfire-repo-artifact-publishing'
  id 'com.netflix.nebula.optional-base' version '8.0.0' // if you want optional-base
}


description = "Spring Test Framework for VMware GemFire"

project.ext.set("pomProjectLongName", description)
project.ext.set("pomProjectArtifactName", "spring-test-gemfire-${gemfireBaseVersion}-2.7")
project.ext.set("pomProjectDescription", description)

dependencies {

  api "edu.umd.cs.mtc:multithreadedtc:1.01"
  api "junit:junit"
  api "org.assertj:assertj-core"
  api "org.mockito:mockito-core"
  api "org.projectlombok:lombok"
  api "org.springframework:spring-test:5.3.25"
  compileOnly("com.vmware.gemfire:spring-data-2.7-gemfire-$gemfireBaseVersion:$springDataTanzuGemFireVersion") {
    exclude group: 'com.vmware.gemfire'
  }

  implementation 'jakarta.annotation:jakarta.annotation-api:1.3.5'

  compileOnly "com.vmware.gemfire:gemfire-core:$gemfireVersion"
  compileOnly "com.vmware.gemfire:gemfire-logging:$gemfireVersion"
  compileOnly "com.vmware.gemfire:gemfire-cq:$gemfireVersion"
  compileOnly "com.vmware.gemfire:gemfire-wan:$gemfireVersion"
  compileOnly "com.vmware.gemfire:gemfire-gfsh:$gemfireVersion"
  compileOnly "com.vmware.gemfire:gemfire-lucene:1.0.0-build.172"
  compileOnly "com.vmware.gemfire:gemfire-tcp-server:$gemfireVersion"
  compileOnly "com.vmware.gemfire:gemfire-deployment-chained-classloader:$gemfireVersion"
  compileOnly "com.vmware.gemfire:gemfire-version:$gemfireVersion"

  compileOnly "com.google.code.findbugs:jsr305:$findbugsVersion"

  implementation "ch.qos.logback:logback-classic", optional

  compileOnly('org.springframework.boot:spring-boot-starter') {
    exclude group: "org.springframework.boot", module: "spring-boot-starter-logging";
  }

  testImplementation("com.vmware.gemfire:spring-data-2.7-gemfire-10.0:$springDataTanzuGemFireVersion") {
    exclude group: 'com.vmware.gemfire'
  }
  testImplementation "com.vmware.gemfire:gemfire-core:$gemfireVersion"
  testImplementation "com.vmware.gemfire:gemfire-logging:$gemfireVersion"
  testImplementation "com.vmware.gemfire:gemfire-cq:$gemfireVersion"
  testImplementation "com.vmware.gemfire:gemfire-wan:$gemfireVersion"
  testImplementation "com.vmware.gemfire:gemfire-gfsh:$gemfireVersion"
  testImplementation "com.vmware.gemfire:gemfire-lucene:1.0.0-build.172"
  testImplementation "com.vmware.gemfire:gemfire-tcp-server:$gemfireVersion"
  testImplementation "com.vmware.gemfire:gemfire-deployment-chained-classloader:$gemfireVersion"
  testImplementation "com.vmware.gemfire:gemfire-version:$gemfireVersion"
}

repositories {
  mavenLocal()
  def additionalMavenRepoURLs = project.ext.get('additionalMavenRepoURLs')
  if (!additionalMavenRepoURLs.isEmpty() && !additionalMavenRepoURLs.isBlank()) {
    additionalMavenRepoURLs.split(',').each {
      project.getRepositories()
              .maven(mavenRepository -> {
                mavenRepository.setUrl(uri(it.toString()));
              });
    }
  }
}
